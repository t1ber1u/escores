import { Config } from '@wdio/types';
import { HookFunctions } from '@wdio/cucumber-framework';

export const config: Config & HookFunctions = {
    // Other configurations
    runner: 'local',
    specs: [
        './test/features/**/*.feature'
    ],
    capabilities: [{
        maxInstances: 1,
        browserName: 'chrome',
    }],
    logLevel: 'info',
    framework: 'cucumber',
    cucumberOpts: {
        require: ['./test/steps/**/*.ts'],
        timeout: 60000,
    },
    reporters: ['spec'],

    // Hook to take screenshot on test failure
    afterStep: async function (test, context, { error, result, duration, passed, retries }) {
        if (error && context.pickle.tags.some(tag => tag.name === '@browser')) {
            await browser.takeScreenshot();
        }
    },

    // For TypeScript support
    autoCompileOpts: {
        autoCompile: true,
        tsNodeOpts: {
            project: './tsconfig.json'
        },
    },
};