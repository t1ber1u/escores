import fs from 'fs';
import os from 'os';

function resolveDynamicFolder(basePath: string, pattern: string): string {
    const directories = fs.readdirSync(basePath, { withFileTypes: true })
        .filter(dirent => dirent.isDirectory() && dirent.name.includes(pattern))
        .map(dirent => path.join(basePath, dirent.name));

    if (directories.length !== 1) {
        throw new Error(`Expected exactly one directory matching pattern ${pattern} in ${basePath}, found ${directories.length}`);
    }

    return directories[0];
}

function resolveChromeBinary(basePath: string): string {
    const isMac = os.platform() === 'darwin';
    const chromePath = isMac ? 
        path.join(basePath, 'chrome-mac-arm64', 'Google Chrome for Testing.app', 'Contents', 'MacOS', 'Google Chrome for Testing') :
        path.join(basePath, 'chrome-linux64', 'chrome');

    if (fs.existsSync(chromePath)) {
        return chromePath;
    }
    throw new Error(`Chrome binary not found at ${chromePath}`);
}

function resolveChromeDriverBinary(basePath: string): string {
    const isMac = os.platform() === 'darwin';
    const driverPath = isMac ? 
        path.join(basePath, 'chromedriver-mac-arm64', 'chromedriver') :
        path.join(basePath, 'chromedriver-linux64', 'chromedriver');

    if (fs.existsSync(driverPath)) {
        return driverPath;
    }
    throw new Error(`ChromeDriver binary not found at ${driverPath}`);
}

const chromeBasePath = path.resolve(__dirname, './chrome');
const chromeDriverBasePath = path.resolve(__dirname, './chromedriver');

const chromeVersionPattern = os.platform() === 'darwin' ? 'mac_arm-' : 'linux-';
const chromeDriverVersionPattern = os.platform() === 'darwin' ? 'mac_arm-' : 'linux-';

const chromeVersionFolder = resolveDynamicFolder(chromeBasePath, chromeVersionPattern);
const chromeDriverVersionFolder = resolveDynamicFolder(chromeDriverBasePath, chromeDriverVersionPattern);

const chromeBinary = resolveChromeBinary(chromeVersionFolder);
const chromeDriverBinary = resolveChromeDriverBinary(chromeDriverVersionFolder);

console.log('Resolved Chrome path:', chromeBinary);
console.log('Resolved ChromeDriver path:', chromeDriverBinary);
