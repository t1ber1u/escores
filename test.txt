import { Given, When, Then } from '@cucumber/cucumber';
import BrowserWrapper from '../support/browserWrapper';
const browser = new BrowserWrapper();

const { Browser } from 'totp-generator';
const moment = require('moment-timezone');

const generateTOTP = (secret, period, timeZone) => {
  const currentTime = moment().tz(timeZone).unix();
  const TOTP = require('totp-generator');
  return TOTP(secret, { algorithm: 'SHA-1', timestamp: currentTime, period: period });
};

const getCurrentTimeInBucharest = () => {
  const currentTimezone = moment.tz.guess();
  const bucharestTime = moment().tz('Europe/Bucharest').unix();
  return bucharestTime;
};

When(/^I input the email (.+) and press (.+)$/, async (email, button) => {
  await $('#input[placeholder="E-mail address"]').setValue(email);
  await $(`//button[contains(.,"${button}")]`).click();
});

When(/^I input the password (.+) and press (.+)$/, async (password, button) => {
  await $('#input[type="password"]').setValue(password);
  await $(`//button[contains(.,"${button}")]`).click();
});

When(/^I input the TAN from the device and press (.+)$/, async (button) => {
  const secret = '3B5YBYDPHGMDP3AF2FPH5TZQH7DSBY3DPKQGPX7P';
  const period = 60;
  const timeZone = 'Europe/Bucharest';
  const otp = generateTOTP(secret, period, timeZone);
  console.log(`Generated TAN: ${otp}`);

  await $('#input[data-testid="code_input"]').setValue(otp);
  await $(`//button[contains(.,"${button}")]`).click();
});

Then(/^I should be successfully authenticated and see the main page$/, async () => {
  const isMainPageVisible = await $('.main-page-identifier').isDisplayed(); // Replace vip
  expect(isMainPageVisible).toBe(true);
});

When(/^I authenticate with the email (.+) and password (.+)$/, async (email, password) => {
  await $('#input[placeholder="E-mail address"]').setValue(email);
  await $(`//button[contains(.,"Continue")]`).click();

  await $('#input[type="password"]').setValue(password);
  await $(`//button[contains(.,"Log in")]`).click();

  const secret = '3B5YBYDPHGMDP3AF2FPH5TZQH7DSBY3DPKQGPX7P';
  const period = 60;
  const timeZone = 'Europe/Bucharest';
  const otp = generateTOTP(secret, period, timeZone);
  console.log(`Generated TAN: ${otp}`);

  await $('#input[data-testid="code_input"]').setValue(otp);
  await $(`//button[contains(.,"Check TAN")]`).click();
});

const getCurrentTimeInBucharest = () => {
  const currentTimezone = moment.tz.guess();
  const bucharestTime = moment().tz('Europe/Bucharest').unix();
  return bucharestTime;
};